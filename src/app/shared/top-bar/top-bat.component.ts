import { Component, Inject, PLATFORM_ID, HostListener } from '@angular/core';
import { isPlatformBrowser, CommonModule } from '@angular/common';
import { RouterModule, Router } from '@angular/router';

@Component({
  selector: 'app-top-bar',
  standalone: true,
  templateUrl: './top-bar.component.html',
  styleUrls: ['./top-bar.component.css'],
  imports: [CommonModule, RouterModule]
})
export class TopBarComponent {
  isBrowser: boolean;             // ‚úÖ Indica si el c√≥digo se ejecuta en el navegador
  scrollOpacity: number = 0;      // ‚úÖ Controla la opacidad del fondo al hacer scroll
  menuOpen: boolean = false;      // ‚úÖ Indica si el men√∫ m√≥vil est√° abierto

  constructor(
    @Inject(PLATFORM_ID) private platformId: Object, // ‚úÖ Inyecci√≥n del ID de plataforma para verificar si es navegador
    private router: Router                            // ‚úÖ Inyecci√≥n del router para navegaci√≥n program√°tica
  ) {
    // ‚úÖ Detecta si la plataforma es navegador (evita errores en SSR)
    this.isBrowser = isPlatformBrowser(platformId);
  }

  // ‚úÖ Alterna el estado del men√∫ desplegable (usado en vista m√≥vil)
  toggleMenu() {
    this.menuOpen = !this.menuOpen;
  }

  // ‚úÖ Escucha el evento de scroll para ajustar la opacidad del top-bar din√°micamente
  @HostListener('window:scroll', [])
  onWindowScroll(): void {
    if (this.isBrowser) {
      const scrollTop = window.scrollY;        // Obtiene el valor de scroll vertical
      const maxScroll = 400;                   // M√°ximo scroll para alcanzar opacidad total
      this.scrollOpacity = Math.min(scrollTop / maxScroll, 0.4); // Limita opacidad m√°xima a 0.4
    }
  }

  // ‚úÖ Funci√≥n que se activa al hacer clic en el logo
  irAlInicio() {
    // üîí Cierra el men√∫ si est√° abierto (√∫til en m√≥vil)
    this.menuOpen = false;

    const currentUrl = this.router.url;

    if (currentUrl === '/' || currentUrl === '/inicio') {
      // üîù Si ya est√°s en inicio, hace scroll suave hacia el top
      window.scrollTo({ top: 0, behavior: 'smooth' });
    } else {
      // üöÄ Si est√°s en otra ruta, navega hacia la ra√≠z
      this.router.navigate(['/']);
    }
  }

  irAbout(){
    this.menuOpen = false;
    this.router.navigate(['/about'])
  }

  irLogin(){
    this.menuOpen = false;
    this.router.navigate(['/login'])
  }


}

